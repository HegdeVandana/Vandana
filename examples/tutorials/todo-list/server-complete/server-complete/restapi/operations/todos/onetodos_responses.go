// Code generated by go-swagger; DO NOT EDIT.

package todos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/go-swagger/go-swagger/examples/tutorials/todo-list/server-complete/models"
)

// OnetodosOKCode is the HTTP code returned for type OnetodosOK
const OnetodosOKCode int = 200

/*OnetodosOK OK

swagger:response onetodosOK
*/
type OnetodosOK struct {

	/*
	  In: Body
	*/
	Payload *models.Profile `json:"body,omitempty"`
}

// NewOnetodosOK creates OnetodosOK with default headers values
func NewOnetodosOK() *OnetodosOK {

	return &OnetodosOK{}
}

// WithPayload adds the payload to the onetodos o k response
func (o *OnetodosOK) WithPayload(payload *models.Profile) *OnetodosOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the onetodos o k response
func (o *OnetodosOK) SetPayload(payload *models.Profile) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OnetodosOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*OnetodosDefault error

swagger:response onetodosDefault
*/
type OnetodosDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewOnetodosDefault creates OnetodosDefault with default headers values
func NewOnetodosDefault(code int) *OnetodosDefault {
	if code <= 0 {
		code = 500
	}

	return &OnetodosDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the onetodos default response
func (o *OnetodosDefault) WithStatusCode(code int) *OnetodosDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the onetodos default response
func (o *OnetodosDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the onetodos default response
func (o *OnetodosDefault) WithPayload(payload *models.Error) *OnetodosDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the onetodos default response
func (o *OnetodosDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OnetodosDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
